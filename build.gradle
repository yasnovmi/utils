buildscript {

    ext {
        kotlinVersion = '1.3.71'
        springBootVersion = '2.2.5.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }

}

plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE' apply false
}

group 'ru.touchin.maven'
version '1.0'

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") {
            bomProperty("kotlin.version", "${kotlinVersion}")
        }
    }
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    compileOnly "org.springframework.data:spring-data-commons"
    compileOnly "org.junit.jupiter:junit-jupiter"
    compileOnly "org.mockito:mockito-core"
    compileOnly "io.projectreactor.kotlin:reactor-kotlin-extensions"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: System.getenv('MAVEN_URL')) {
                authentication(
                        userName: System.getenv('MAVEN_LOGIN'),
                        password: System.getenv('MAVEN_PASS')
                )
            }
        }
    }
}
